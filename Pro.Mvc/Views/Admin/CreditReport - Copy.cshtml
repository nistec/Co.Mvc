@model Pro.Query.QueryModel
@{
    Layout = "~/Views/Shared/_ViewSystem.cshtml";
    ViewBag.Title = "Tasks";
    var dataModel = @Html.Raw(Json.Encode(Model));
    var userInfo = @Html.Raw(Json.Encode(ViewBag.UserInfo));
}
@section head { 
    @Scripts.Render("~/bundles/jqx")
    @Scripts.Render("~/bundles/jqxgrid")
    <script src="~/jqwidgets/jqxgrid.grouping.js"></script>
    <script type="text/javascript" src="~/jqwidgets/jqxtreegrid.js"></script>
    <script type="text/javascript" src="~/jqwidgets/jqxdata.export.js"></script>
    <script type="text/javascript" src="~/Scripts/app/app-jqx-grid-1.0.js"></script>

    <style type="text/css">
        input {
            direction:rtl;text-align:right;
        }

        /*.jqx-grid-cell {
            border: none;
        }
        .wiz-tab {
            display:none;
        }
        .wiz-tab.active {
             display: block;
        }*/
    .green {
        color:black\9;
        background-color: #19a709;
    }
    .yellow {
        color: black\9;
        background-color: yellow;
    }
    .red {
        color: black\9;
        background-color: #e83636;
    }
    .green:not(.jqx-grid-cell-hover):not(.jqx-grid-cell-selected), .jqx-widget .green:not(.jqx-grid-cell-hover):not(.jqx-grid-cell-selected) {
        color: black;
        background-color: #19a709;
    }
   .yellow:not(.jqx-grid-cell-hover):not(.jqx-grid-cell-selected), .jqx-widget .yellow:not(.jqx-grid-cell-hover):not(.jqx-grid-cell-selected) {
        color: black;
        background-color: yellow;
    }
    .red:not(.jqx-grid-cell-hover):not(.jqx-grid-cell-selected), .jqx-widget .red:not(.jqx-grid-cell-hover):not(.jqx-grid-cell-selected) {
        color: black;
        background-color: #e83636;
    }
</style>

}


@section scripts {

    <script type="text/javascript">

    //var NScustomers = {};
    
    var theme = 'nis_metro';
    $(document).ready(function () {
        JSON.useDateParser();
    

        (function ($) {

            var _grid;
            var wizard;

            app_credit_grid = {

                //accType: 0,
                dataAdapter: {},
                AllowEdit: 0,
                UserId: 0,
                IsMobile: false,
                source:
                    {
                        datatype: "json",
                        //async: false,
                        datafields: [
                            { name: 'Creation', type: 'date' },
                            { name: 'AccountId', type: 'number' },
                            { name: 'TransId', type: 'number' },
                            { name: 'CampaignId', type: 'number' },
                            { name: 'CreditValue', type: 'number' },
                            { name: 'CreditStatus', type: 'number' },
                            { name: 'Units', type: 'number' },
                            { name: 'UserId', type: 'number' },
                            { name: 'BillingId', type: 'number' },
                            { name: 'ActionName', type: 'string' },
                            { name: 'MethodName', type: 'string' },
                            { name: 'ActualCredit', type: 'number' },
                            { name: 'TotalValue', type: 'number' },
                            { name: 'TotalRows', type: 'number' },
                            { name: 'row', type: 'number' }
                        ],
                        id: 'row',
                        type: 'POST',
                        url: '@Model.Url',
                        //data: { 'AccountId': 0, 'UserId': 0, 'assignMe': false, 'state': 0 },
                        pagenum: 0,
                        pagesize: 20,
                        root: 'Result',
                        pager: function (pagenum, pagesize, oldpagenum) {
                            console.log(pagenum);
                            // callback called when a page or page size is changed.
                        },
                        filter: function () {
                            // update the grid and send a request to the server.
                            $("#jqxgrid").jqxGrid('updatebounddata');
                        },
                        sort: function () {
                            // update the grid and send a request to the server.
                            $("#jqxgrid").jqxGrid('updatebounddata');
                        },
                        beforeprocessing: function (data) {
                            if (data.Result.length > 0)
                                this.totalrecords = data.Result[0].TotalRows;
                        }
                    },
                edit: function (id) {
                    app.redirectTo('/System/TaskEdit?id=' + id);
                    //wizard.displayStep(2);
                    //$.ajax({
                    //    type: 'GET',
                    //    url: '/System/TaskEdit',
                    //    data: { "id": id },
                    //    success: function (data) {
                    //        $('#divPartial').html(data);
                    //    }
                    //});
                },

                end: function (refresh) {
                    wizard.displayStep(1);
                    $('#divPartial').html('');
                    if (refresh)
                        $('#jqxgrid').jqxGrid('source').dataBind();
                },

                getTotalRows: function (data) {
                    if (data) {
                        return dataTotalRows(data);
                    }
                    return 0;
                },

                grid: function () {
                    var slf = this;
                    var subjectWidth = slf.IsMobile ? 250 : 400;

                    // create Tree Grid
                    $("#jqxgrid").jqxGrid(
                        {
                            width: '100%',
                            //autoRowHeight: false,
                            autoheight: true,
                            enabletooltips: true,
                            rtl: true,
                            source: slf.dataAdapter,
                            localization: getLocalization('he'),
                            virtualmode: true,
                            rendergridrows: function (obj) {
                                return slf.dataAdapter.records;
                            },
                            //columnsresize: true,
                            pageable: true,
                            //pagermode: 'simple',
                            sortable: true,
                            groupable: true,
                            columns: [
                                {
                                    text: 'מס-רשומה', dataField: 'BillingId', filterable: false, width: 120, cellsalign: 'right', align: 'center'
                                    //cellsrenderer: function (row, columnfield, value, defaulthtml, columnproperties) {
                                    //    var editlink = '';
                                    //    //var asb = $('#jqxgrid').jqxGrid('getrowdata', row).AssignBy;
                                    //    //if (slf.UserId == asb)
                                    //    //    editlink = '<label> </label><a href="#" onclick="app_tasks_grid.taskEdit(' + value + ')" ><label> </label><i class="fa fa-plus-square-o"></i></a>';

                                    //    //return '<div style="text-align:center">' + value + '<a href="#" onclick="app_tasks_grid.taskInfo(' + value + ')" ><label> </label><i class="fa fa-info-circle"></i></a>' + editlink + '</div>';

                                    //    return '<div style="text-align:right;margin-top:6px;margin-right:10px"><a href="#" onclick="app_tasks_grid.taskInfo(' + value + ')" ><label> ' + value + ' </label><i class="fa fa-info-circle"></i></a></div>';
                                    //}
                                },
                                {
                                    text: '  ערך  ', dataField: 'CreditValue', cellsalign: 'right', align: 'center', width: 120,
                                    filtertype: "custom",
                                    createfilterpanel: function (datafield, filterPanel) {
                                        app_jqxgrid.buildFilterPanel(filterPanel, datafield);
                                    }
                                },
                                {
                                    text: ' ייתרה   ', dataField: 'CreditStatus', cellsalign: 'right', align: 'center', width: 100,
                                    filtertype: "custom",
                                    createfilterpanel: function (datafield, filterPanel) {
                                        app_jqxgrid.buildFilterPanel(filterPanel, datafield);
                                    }
                                },
                                {
                                    text: '  יחי-חיוב  ', dataField: 'Units', cellsalign: 'right', align: 'center', width: 120,
                                    filtertype: "custom",
                                    createfilterpanel: function (datafield, filterPanel) {
                                        app_jqxgrid.buildFilterPanel(filterPanel, datafield);
                                    }
                                },
                                {
                                    text: 'סוג פעולה', dataField: 'ActionName', cellsformat: 'd', cellsalign: 'right', align: 'center', width: 120,
                                    filtertype: "custom",
                                    createfilterpanel: function (datafield, filterPanel) {
                                        app_jqxgrid.buildFilterPanel(filterPanel, datafield);
                                    }
                                },
                                {
                                    text: 'פריט', dataField: 'MethodName', cellsalign: 'right', align: 'center', width: 120, 
                                    filtertype: "custom",
                                    createfilterpanel: function (datafield, filterPanel) {
                                        app_jqxgrid.buildFilterPanel(filterPanel, datafield);
                                    }
                                },
                                {
                                    text: ' מס-שליחה ', dataField: 'TransId', cellsalign: 'right', align: 'center', width: 120,
                                    filtertype: "custom",
                                    createfilterpanel: function (datafield, filterPanel) {
                                        app_jqxgrid.buildFilterPanel(filterPanel, datafield);
                                    }
                                },
                                {
                                    text: 'קמפיין', dataField: 'CampaignId', cellsalign: 'right', align: 'center', width: 120,
                                    filtertype: "custom",
                                    createfilterpanel: function (datafield, filterPanel) {
                                        app_jqxgrid.buildFilterPanel(filterPanel, datafield);
                                    }
                                },
                                {
                                    text: 'עודכן ב', type: 'date', dataField: 'Creation', cellsformat: 'd', cellsalign: 'right', align: 'center', width: 120,
                                    filtertype: "custom",
                                    createfilterpanel: function (datafield, filterPanel) {
                                        app_jqxgrid.buildFilterPanel(filterPanel, datafield);
                                    }
                                }
                            ]
                            //groups: ['TaskSubject']
                        });
                    $("#jqxgrid").on("pagechanged", function (event) {
                        var args = event.args;
                        var pagenum = args.pagenum;
                        var pagesize = args.pagesize;

                        $.jqx.cookie.cookie("jqxGrid_jqxWidget", pagenum);
                    });
                    $('#jqxgrid').on('rowdoubleclick', function (event) {
                        var args = event.args;
                        var boundIndex = args.rowindex;
                        var visibleIndex = args.visibleindex;
                        var id = $("#jqxgrid").jqxGrid('getrowid', boundIndex);
                        return slf.taskEdit(id);
                    });

                },
                taskEdit: function (id) {
                    app.redirectTo('/System/TaskEdit?id=' + id);
                    //wizard.displayStep(2);
                    //$.ajax({
                    //    type: 'GET',
                    //    url: '/System/TaskEdit',
                    //    data: { "id": id },
                    //    success: function (data) {
                    //        $('#divPartial').html(data);
                    //    }
                    //});
                },
                taskInfo: function (id) {
                    app.redirectTo('/System/TaskInfo?id=' + id);
                    //wizard.displayStep(2);
                    //$.ajax({
                    //    type: 'GET',
                    //    url: '/System/TaskEdit',
                    //    data: { "id": id },
                    //    success: function (data) {
                    //        $('#divPartial').html(data);
                    //    }
                    //});
                },
                load: function (Model, userInfo) {
                    this.IsMobile = app.IsMobile();
                    this.UserId = userInfo.UserId;
                    this.AllowEdit = userInfo.UserRole > 4 ? 1 : 0;


                    this.source.data = {
                        //'QueryType': Model.QueryType,
                        'AccountId': Model.AccountId,
                        'ActionType': Model.ActionType
                        //'DateFrom': Model.DateFrom,
                        //'DateTo': Model.DateTo
                    };

                    this.dataAdapter = new $.jqx.dataAdapter(this.source, {
                        loadComplete: function (data) {
                            //source.totalrecords = getTotalRows(data);
                        },
                        loadError: function (xhr, status, error) {
                            app_dialog.alert(' status: ' + status + '\n error ' + error)
                        }
                    });

                    this.grid();

                    return this;
                },
                reload: function () {
                    this.source.data['assignMe'] = $("#chkAssignBy").is(':checked');
                    this.source.data['state'] = $('#TaskState').val();
                    $('#jqxgrid').jqxGrid('source').dataBind();
                }
            };

        })(jQuery)

        $('#report-submit').on('click', function (e) {
            e.preventDefault();
            var Model = { AccountId: $("#AccountId").val(), ActionType: $("#ActionType").val(), DateFrom: $("#DateFrom").val(), DateTo: $("#DateTo").val()};
            task_grid = app_credit_grid.load(Model, JSON.parse('@userInfo'));
        });

  });

    </script>
}


<div class="breadcrumbs">
</div>
<div class="top-space"></div>

<div class="global-view">
    <div class="container">
            <h3 class="rtl">דוח קרדיט</h3>
            <div class="grid-wrap rtl">
                <div id="grid-toolbar-options" class="grid-toolbar" style="font-size: 80%;">
                        <input type="hidden" id="TaskState" value="0" />
                        <div style="height:5px"></div>
                        <div style="display:inline;float:right">
                            <span>לקוח</span>:<input type="text" id="AccountId" />
                            <span>פעולה</span>:<input type="text" id="ActionType" />
                            <span>מ-תאריך</span>:<input type="text" id="DateFrom" />
                            <span>עד-תאריך</span>:<input type="text" id="DateTo" />
                        </div>
                        <div id="tbFilter" style="margin-left: 5px; float: right; " title='סינון'><img src='../scripts/app/images/filter.gif'></div>
                        <div id="tbFilterRemove" style="margin-left: 5px; float: right;" title='ביטול סינון'><img src='../scripts/app/images/filterRemove.gif'></div>
                        <div class="rtl">
                            <a id="report-submit" class="btn-default btn7 w-60" href="#">הצג</a>
                            <a id="report-cancel" class="btn-default btn7 w-60" href="#">ביטול</a>
                        </div>
                </div>
                <div id="grid-toolbar" class="grid-toolbar"></div>

                <div id="jqxWidget">
                    <div id="jqxgrid" style="position:relative;z-index:1;"></div>
                </div>
            </div>
     </div>
</div>

<!--footer-->
<footer>
</footer> 
<script type="text/javascript">
    app_menu.activeLayoutMenu("liReport");
    app_menu.breadcrumbs("System", "Tasks", 'en');
    app_menu.footer("task");
</script>

